class Solution {
   public int search(int[] arr, int target) {
	int result = pivot(arr);
   if(result == -1) {
	   //Then do normal binary search
	   return BinarySearch(arr, target, 0, arr.length-1);
   }
  
	   if(arr[result] == target)
		   return result;
	   if(target >= arr[0])
		   return BinarySearch(arr, target, 0, result-1);
	   return BinarySearch(arr, target, result+1,arr.length-1);
   
	   
}
int BinarySearch(int arr[], int target, int start, int end) {
	while(start <= end) {
		int mid = (start+end)/2;
		if(arr[mid]>target)
			end = mid-1;
		else if(arr[mid]<target)
			start = mid+1;
		else
			return mid;
	}
	return -1;
}
int pivot(int arr[]) {
	
	int start = 0;
	int end = arr.length-1;
	while(start <= end) {
		int mid = (end+start)/2;
		if(mid < end && arr[mid] > arr[mid+1])
			return mid;
		if(mid > start && arr[mid] < arr[mid-1])
			return mid-1;
		if(arr[mid] <= arr[start])
			end = mid-1;
		else
			start = mid+1;
	}
	return -1;
    }
}
